spring.application.name=hrgateway
server.port=8765

# URL do Eureka Server (ajuste conforme necessário)
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Habilita a descoberta automática de serviços via Eureka no Gateway
spring.cloud.gateway.server.webflux.discovery.locator.enabled=true
spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true

# =============================
# ROTAS VIA DISCOVERY + FILTERS
# =============================

# Exemplo de rota via Eureka com CircuitBreaker
spring.cloud.gateway.server.webflux.routes[0].id=hrworker
spring.cloud.gateway.server.webflux.routes[0].uri=lb://hrworker
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/workers/**
#spring.cloud.gateway.server.webflux.routes[0].filters[0]=StripPrefix=1
#spring.cloud.gateway.server.webflux.routes[0].filters[1]=CircuitBreaker=name=orderCircuit,fallbackUri=forward:/fallback/orders

spring.cloud.gateway.server.webflux.routes[1].id=hrpayroll
spring.cloud.gateway.server.webflux.routes[1].uri=lb://hrpayroll
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/payments/**
#spring.cloud.gateway.server.webflux.routes[1].filters[0]=StripPrefix=1
#spring.cloud.gateway.server.webflux.routes[1].filters[1]=CircuitBreaker=name=paymentCircuit,fallbackUri=forward:/fallback/payment